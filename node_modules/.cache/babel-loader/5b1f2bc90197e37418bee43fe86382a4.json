{"ast":null,"code":"import React from'react';import'./CircleSelector.css';var CircleSelectors=function CircleSelectors(props){function check(z){if(z==props.currentCircle){console.log(\"state: \".concat(props.currentCircle));console.log(\"current: \".concat(z));return'selected';}else{// console.log('')\n}}return/*#__PURE__*/React.createElement(\"div\",{className:\"CircleSelector\"},props.circles.map(function(circle,idx){return/*#__PURE__*/React.createElement(\"button\",{key:idx,id:idx+1,className:check(idx+1),onClick:function onClick(e){return props.selectCircle(e.target.id);}},\"Selected Circle \",circle);}));};export default CircleSelectors;","map":{"version":3,"sources":["/Users/mohamedaden/Desktop/unit4/src/component/CircleSelector/CircleSelector.jsx"],"names":["React","CircleSelectors","props","check","z","currentCircle","console","log","circles","map","circle","idx","e","selectCircle","target","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,sBAAP,CAGA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACnC,QAASC,CAAAA,KAAT,CAAeC,CAAf,CAAkB,CACd,GAAGA,CAAC,EAAIF,KAAK,CAACG,aAAd,CAA6B,CACzBC,OAAO,CAACC,GAAR,kBAAsBL,KAAK,CAACG,aAA5B,GACAC,OAAO,CAACC,GAAR,oBAAwBH,CAAxB,GACA,MAAO,UAAP,CACH,CAJD,IAIO,CAEH;AACH,CACJ,CACD,mBACI,2BAAK,SAAS,CAAC,gBAAf,EAGEF,KAAK,CAACM,OAAN,CAAcC,GAAd,CAAkB,SAACC,MAAD,CAASC,GAAT,qBAChB,8BACC,GAAG,CAAEA,GADN,CAEE,EAAE,CAAEA,GAAG,CAAG,CAFZ,CAGA,SAAS,CAAER,KAAK,CAACQ,GAAG,CAAG,CAAP,CAHhB,CAIE,OAAO,CAAE,iBAAAC,CAAC,QAAIV,CAAAA,KAAK,CAACW,YAAN,CAAmBD,CAAC,CAACE,MAAF,CAASC,EAA5B,CAAJ,EAJZ,qBAKgBL,MALhB,CADgB,EAAlB,CAHF,CADJ,CAcG,CAzBH,CA2BA,cAAeT,CAAAA,eAAf","sourcesContent":["import React from 'react';\nimport './CircleSelector.css';\n\n\nconst CircleSelectors = (props) => {\nfunction check(z) {\n    if(z == props.currentCircle) {\n        console.log(`state: ${props.currentCircle}`)\n        console.log(`current: ${z}`)\n        return 'selected';\n    } else {\n      \n        // console.log('')\n    }\n}\nreturn(\n    <div className='CircleSelector'>\n     \n      {\n      props.circles.map((circle, idx) =>\n        <button\n         key={idx}\n          id={idx + 1}\n        className={check(idx + 1)}\n          onClick={e => props.selectCircle(e.target.id)}\n      >Selected Circle {circle}</button> \n      )}\n    </div>\n)\n  };\n\nexport default CircleSelectors;"]},"metadata":{},"sourceType":"module"}